import {ButtonBuilder, ButtonStyle, ActionRowBuilder, MessageFlags} from "discord.js";

export default async function (interaction, pool) {
    const messageId = interaction.options.getString("message_id");
    const startTime = interaction.options.getString("start_time");
    const endTime = interaction.options.getString("end_time");

    // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∏–≤–µ–Ω—Ç –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    const insertEvent = await pool.query(
        "INSERT INTO events (message_id, start_time, end_time, created_by) VALUES ($1, $2, $3, $4) RETURNING id",
        [messageId, startTime, endTime, interaction.user.id]
    );

    const eventId = insertEvent.rows[0].id;

    // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –ø–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏–µ–º
    const row = new ActionRowBuilder().addComponents(
        new ButtonBuilder()
            .setCustomId(`register_event_${eventId}`)
            .setLabel("üéüÔ∏è –ó–∞–ø–∏—Å–∞—Ç—å—Å—è")
            .setStyle(ButtonStyle.Primary),
        new ButtonBuilder()
            .setCustomId(`register_event_${eventId}`)
            .setLabel("üéüÔ∏è –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–ø–∏—Å—å")
            .setStyle(ButtonStyle.Danger)
    );

    const targetMessage = await interaction.channel.messages.fetch(messageId);
    await targetMessage.edit({ components: [row] });

    await interaction.reply({ content: "‚úÖ –ò–≤–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω! –ö–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞.", flags: MessageFlags.Ephemeral });
}