import {ModalBuilder, TextInputBuilder, TextInputStyle, ActionRowBuilder, MessageFlags} from "discord.js";
import {getActiveEvent, getMember} from "../../utils.js";

export default async function (interaction, pool, isContextMenu = false, isMessageContentMenuCommand = false) {
    const event = await getActiveEvent(pool);
    if (!event) {
        return interaction.reply({ content: "‚ùå –≠—Ç–æ —Å–æ–±—ã—Ç–∏–µ –ª–∏–±–æ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ª–∏–±–æ —É–∂–µ –∑–∞–≤–µ—Ä—à–∏–ª–æ—Å—å.", flags: MessageFlags.Ephemeral });
    }

    let member = getMember(interaction, isContextMenu, isMessageContentMenuCommand);

    if (!member) {
        console.error("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç", member);
        return await interaction.reply({content: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç", flags: MessageFlags.Ephemeral});
    }

    const betsResult = await pool.query(`SELECT * FROM bets WHERE event_id = $1 AND user_id = $2`, [event.id, member.id]);

    if (betsResult.rows.length) {
        await interaction.reply({content: "–°—Ç–∞–≤–∫–∞ —É–∂–µ —Å–æ–∑–¥–∞–Ω–∞!", flags: MessageFlags.Ephemeral});
        return ;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ª–∏ –∑–∞–∫—Ä—ã—Ç—ã–π –∫–∞–Ω–∞–ª
    const settings = await pool.query("SELECT * FROM settings WHERE key = 'bet_info_private_channel_id'");
    const channelId = settings.rows[0]?.value;

    if (!channelId) {
        return await interaction.reply({ content: "‚ö†Ô∏è –ö–∞–Ω–∞–ª –¥–ª—è —Å—Ç–∞–≤–æ–∫ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.", flags: MessageFlags.Ephemeral });
    }

    const channel = await interaction.guild.channels.fetch(channelId);
    if (!channel) {
        return await interaction.reply({ content: "‚ö†Ô∏è –û—à–∏–±–∫–∞: –Ω–µ –Ω–∞–π–¥–µ–Ω –∫–∞–Ω–∞–ª –¥–ª—è —Å—Ç–∞–≤–æ–∫.", flags: MessageFlags.Ephemeral });
    }

    // –°–æ–∑–¥–∞–Ω–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    const modal = new ModalBuilder()
        .setCustomId("bet_modal")
        .setTitle("üé≤ –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç–∞–≤–∫–∏");

    const nicknameInput = new TextInputBuilder()
        .setCustomId("bet_nickname")
        .setLabel("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–∏–∫")
        .setStyle(TextInputStyle.Short)
        .setRequired(true);

    const betAmountInput = new TextInputBuilder()
        .setCustomId("bet_amount")
        .setLabel("–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —Å—Ç–∞–≤–∫–∏ (–æ—Ç 200)")
        .setStyle(TextInputStyle.Short)
        .setRequired(true);

    const serverInput = new TextInputBuilder()
        .setCustomId("bet_server")
        .setLabel("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à —Å–µ—Ä–≤–µ—Ä (–ö—Ä–∞—Ç–æ—Å / –ê–ª—å–¥–µ—Ä–∞–Ω)")
        .setStyle(TextInputStyle.Short)
        .setRequired(true);

    const row1 = new ActionRowBuilder().addComponents(nicknameInput);
    const row2 = new ActionRowBuilder().addComponents(betAmountInput);
    const row3 = new ActionRowBuilder().addComponents(serverInput);

    modal.addComponents(row1, row2, row3);

    // –û—Ç–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    await interaction.showModal(modal);
}
