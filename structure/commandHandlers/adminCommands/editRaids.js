import { ActionRowBuilder, ButtonBuilder, ButtonStyle, MessageFlags } from 'discord.js';

export default async function editRaids(interaction, pool) {
    const raids = await pool.query('SELECT id, raid_name FROM raids ORDER BY id LIMIT 20');

    if (raids.rows.length === 0) {
        return interaction.reply({
            content: '‚ö† –ï—â—ë –Ω–∏–∫–∞–∫–∏—Ö —Ä–µ–π–¥–æ–≤ –Ω–µ —Å–æ–∑–¥–∞–Ω–æ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–≤—ã–π —Ä–µ–π–¥.',
            components: [
                new ActionRowBuilder().addComponents(
                    new ButtonBuilder()
                        .setCustomId('create_raid')
                        .setLabel('–°–æ–∑–¥–∞—Ç—å')
                        .setStyle(ButtonStyle.Primary)
                )
            ],
            flags: MessageFlags.Ephemeral
        });
    }

    const components = [];

    raids.rows.forEach((raid) => {
        const button = new ButtonBuilder()
            .setCustomId(`delete_raid_${raid.id}`)
            .setLabel(`‚ùå ${raid.raid_name}`)
            .setStyle(ButtonStyle.Danger);

        components.push(button);
    });

    const rows = [];
    for (let i = 0; i < components.length; i += 5) {
        rows.push(new ActionRowBuilder().addComponents(components.slice(i, i + 5)));
    }

    rows.unshift(new ActionRowBuilder().addComponents(
        new ButtonBuilder()
            .setCustomId('create_raid')
            .setLabel('–°–æ–∑–¥–∞—Ç—å')
            .setStyle(ButtonStyle.Success)
    ));

    if (interaction.replied) {
        await interaction.editReply({
            content: 'üìã –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ä–µ–π–¥–æ–≤:',
            components: rows,
            flags: MessageFlags.Ephemeral
        });
    } else {
        await interaction.reply({
            content: 'üìã –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ä–µ–π–¥–æ–≤:',
            components: rows,
            flags: MessageFlags.Ephemeral
        });
    }
}
