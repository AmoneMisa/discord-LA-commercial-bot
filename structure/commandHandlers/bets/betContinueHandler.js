import {ActionRowBuilder, MessageFlags, StringSelectMenuBuilder} from "discord.js";

export default async function (interaction, pool) {
    const nickname = interaction.fields.getTextInputValue("bet_nickname");
    const betAmount = parseInt(interaction.fields.getTextInputValue("bet_amount"), 10);
    const server = interaction.fields.getTextInputValue("bet_server");

    if (isNaN(betAmount) || betAmount < 200) {
        return await interaction.reply({ content: "‚ö† –û—à–∏–±–∫–∞: –°—Ç–∞–≤–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç 200", flags: MessageFlags.Ephemeral });
    }

    const result = await pool.query("SELECT * FROM bet_events");
    const activeEvent = result.rows.find(_event => _event.end_time > new Date().getTime());

    if (!JSON.parse(activeEvent.participants).length) {
        await interaction.reply({ content: "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏", flags: MessageFlags.Ephemeral });
        throw new Error("‚ö† –û—à–∏–±–∫–∞: –ù–µ —É–∫–∞–∑–∞–Ω—ã —É—á–∞—Å—Ç–Ω–∏–∫–∏ –¥–ª—è —Å—Ç–∞–≤–∫–∏");
    }

    const availableTargets = JSON.parse(activeEvent.participants).map(nick => ({
        label: nick,
        value: nick
    }));

    const targetSelect = new StringSelectMenuBuilder()
        .setCustomId(`bet_target_${nickname}_${betAmount}_${server}`)
        .setPlaceholder("–í—ã–±–µ—Ä–∏—Ç–µ, –Ω–∞ –∫–æ–≥–æ –ø–æ—Å—Ç–∞–≤–∏—Ç—å")
        .addOptions(availableTargets);

    const row = new ActionRowBuilder().addComponents(targetSelect);

    await interaction.reply({
        content: `‚úÖ –í—ã–±–µ—Ä–∏—Ç–µ, –Ω–∞ –∫–æ–≥–æ –ø–æ—Å—Ç–∞–≤–∏—Ç—å:\nüìå **–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ü–µ–ª–∏:** ${JSON.parse(activeEvent.participants).join(", ")}`,
        components: [row],
        flags: MessageFlags.Ephemeral
    });
}