import {ActionRowBuilder, ButtonBuilder, ButtonStyle, MessageFlags} from "discord.js";
import {getRaidName} from "../dbUtils.js";

export default async function notifySeller(interaction, pool, client) {
    try {
        const [ , , sellerId, raidId] = interaction.customId.split('_');
        const seller = await client.users.fetch(sellerId);
        const raidName = await getRaidName(pool, raidId);

        if (seller) {
            const row = new ActionRowBuilder()
                .addComponents(
                    new ButtonBuilder()
                        .setCustomId(`seller_answer_${interaction.user.id}_${raidId}`)
                        .setLabel('–ü—Ä–∏–Ω—è—Ç—å')
                        .setStyle(ButtonStyle.Success)
                ).addComponents(
                    new ButtonBuilder()
                        .setCustomId(`seller_reject_${interaction.user.id}_${raidId}`)
                        .setLabel('–û—Ç–∫–ª–æ–Ω–∏—Ç—å')
                        .setStyle(ButtonStyle.Danger)
                );

            await seller.send({content: `üí∞ **–ó–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–∫—É–ø–∫—É —Ä–µ–π–¥–∞!**
            **–ü–æ–∫—É–ø–∞—Ç–µ–ª—å:** <@${interaction.user.id}>
            **–ü–µ—Ä—Å–æ–Ω–∞–∂:** ${interaction.fields.getTextInputValue('buyer_nickname')}
            **–†–µ–π–¥:** ${raidName}`, components: [row]});

            await interaction.reply({ content: `‚úÖ –í–∞—à –∑–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø—Ä–æ–¥–∞–≤—Ü—É!`, flags: MessageFlags.Ephemeral });
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø—Ä–æ–¥–∞–≤—Ü—É:', error);
        await interaction.reply({ content: '‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞ –ø—Ä–æ–¥–∞–≤—Ü—É.', flags: MessageFlags.Ephemeral });
    }
}