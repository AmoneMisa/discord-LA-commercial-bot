import {getActiveEvent} from "../../utils.js";

export default async function (pool, channel, eventId) {
    const event = await getActiveEvent(pool);
    if (!event) {
        return;
    }

    const winners = await pool.query(
        "SELECT user_id, target, amount FROM bets WHERE event_id = $1 ORDER BY amount DESC",
        [eventId]
    );

    if (winners.rowCount === 0) {
        await channel.send(`üèÜ **–ò—Ç–æ–≥–æ–≤—ã–µ —Å—Ç–∞–≤–∫–∏ –¥–ª—è ${event.rows[0].name}**\n‚ùå **–ü–æ–±–µ–¥–∏—Ç–µ–ª–µ–π –Ω–µ—Ç.**`);
        return;
    }

    const perPage = 20;
    const totalPages = Math.ceil(winners.rowCount / perPage);

    for (let page = 1; page <= totalPages; page++) {
        const startIndex = (page - 1) * perPage;
        const endIndex = startIndex + perPage;
        const paginatedWinners = winners.rows.slice(startIndex, endIndex);

        let content = `üèÜ **–ò—Ç–æ–≥–æ–≤–∞—è —Ç–∞–±–ª–∏—Ü–∞ —Å—Ç–∞–≤–æ–∫ (—Å—Ç—Ä. ${page}/${totalPages})**:\n`;
        paginatedWinners.forEach((bet, index) => {
            content += `**${startIndex + index + 1}.** <@${bet.user_id}> –ø–æ—Å—Ç–∞–≤–∏–ª **${bet.amount}** –Ω–∞ **${bet.choice}** –∏ **–≤—ã–∏–≥—Ä–∞–ª!**\n`;
        });

        await channel.send(content);
    }
}
