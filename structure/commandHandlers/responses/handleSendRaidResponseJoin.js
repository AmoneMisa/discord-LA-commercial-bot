import {getUserAchievements, getUserProfile} from "../../dbUtils.js";
import {MessageFlags} from "discord.js";
import sendCharacterList from "../../generateCharactersListImage.js";

const tempMessageStorage = new Map();

export default async function (interaction, pool, client) {
    // –ö–Ω–æ–ø–∫–∞ "–•–æ—á—É –≤ —Ä–µ–π–¥"
    if (tempMessageStorage.has(interaction.message.id)
        && tempMessageStorage.get(interaction.message.id).includes(interaction.user.id)) {
        await interaction.reply({content: "–í—ã —É–∂–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞–ª–∏ —Å —ç—Ç–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º", flags: MessageFlags.Ephemeral});
        return console.log("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞–ª —Å —ç—Ç–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º", interaction.message.id, interaction.user.id);
    }

    const [, , sellerId] = interaction.customId.split('_');

    if (interaction.user.id === sellerId) {
        return interaction.reply({
            content: 'üö´ –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É —Å–∞–º–æ–º—É —Å–µ–±–µ.',
            flags: MessageFlags.Ephemeral
        });
    }

    const userProfile = await getUserProfile(pool, interaction.user.id);

    if (!userProfile) {
        return interaction.reply({
            content: "–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–Ω–æ–ø–∫–∏ '–•–æ—á—É –≤ —Ä–µ–π–¥' –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∏–º–µ—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å.",
            flags: MessageFlags.Ephemeral
        });
    }

    if (!userProfile.characters.length) {
        await interaction.reply({content: "–ù–µ –Ω–∞–π–¥–µ–Ω—ã –ø–µ—Ä—Å–æ–Ω–∞–∂–∏", flags: MessageFlags.Ephemeral})
        console.error("–ù–µ –Ω–∞–π–¥–µ–Ω—ã –ø–µ—Ä—Å–æ–Ω–∞–∂–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", interaction.user.id);
        return;
    }

    const seller = await client.users.fetch(sellerId);

    if (seller) {
        const achievements = await getUserAchievements(pool, interaction.user.id);
        await sendCharacterList(interaction, `–ò–≥—Ä–æ–∫: <@${interaction.user.id}> –æ—Ç–ø—Ä–∞–≤–∏–ª –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ —Ä–µ–π–¥\n:peacock: **–ò–º—è:** ${userProfile.name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}\n`, userProfile.characters, seller, achievements);
        interaction.reply({content: "–ó–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω", flags: MessageFlags.Ephemeral});
        tempMessageStorage.set(interaction.message.id, []);
        tempMessageStorage.get(interaction.message.id).push(interaction.user.id);
    }

    setTimeout(() => tempMessageStorage.delete(interaction.message.id), 5 * 60 * 1000);
}