import {ButtonStyle, MessageFlags} from 'discord.js';
import {getActiveLotsCount} from "../../dbUtils.js";
import {createTradeMessage} from "./createMessage.js";

export default async function createLotHandler(interaction, pool, client) {
    const userId = interaction.user.id;

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ª–æ—Ç–æ–≤ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const activeLots = await getActiveLotsCount(pool, userId);
    if (activeLots.rows[0].count >= 5) {
        return interaction.reply({ content: "üö´ –£ –≤–∞—Å —É–∂–µ 5 –∞–∫—Ç–∏–≤–Ω—ã—Ö –ª–æ—Ç–æ–≤!", flags: MessageFlags.Ephemeral });
    }

    await createTradeMessage(interaction, pool, client);
    //
    // // –ü–æ–∏—Å–∫ –ø—Ä–æ–¥–∞–≤—Ü–∞ (WTS) —Å –ø–æ–¥—Ö–æ–¥—è—â–∏–º –ø—Ä–µ–¥–º–µ—Ç–æ–º
    // const match = await pool.query(`
    //     SELECT * FROM inventory
    //     WHERE type = 'WTS'
    //     AND item_offer = $1
    //     AND price <= $2
    //     AND server = $3
    //     AND user_id != $4
    //     ORDER BY price ASC, expires_at ASC
    //     LIMIT 1
    // `, [item, price, server, userId]);
    //
    // if (match.rows.length > 0) {
    //     const seller = match.rows[0];
    //
    //     const buyerUser = await interaction.client.users.fetch(userId);
    //     const sellerUser = await interaction.client.users.fetch(seller.user_id);
    //
    //     // –ï—Å–ª–∏ —Ç–æ—Ä–≥ –∑–∞–ø—Ä–µ—â—ë–Ω, —Å—Ä–∞–∑—É –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–Ω—Ç–∞–∫—Ç—ã
    //     if (!negotiable) {
    //         await buyerUser.send(`üí∞ **–ù–∞—à—ë–ª—Å—è –ø—Ä–æ–¥–∞–≤–µ—Ü!** –í—ã –º–æ–∂–µ—Ç–µ –∫—É–ø–∏—Ç—å **${item}** –∑–∞ **${seller.price}k** —É <@${seller.user_id}>.`);
    //         await sellerUser.send(`üõí **–ù–∞—à—ë–ª—Å—è –ø–æ–∫—É–ø–∞—Ç–µ–ª—å!** <@${userId}> —Ö–æ—á–µ—Ç –∫—É–ø–∏—Ç—å **${item}** –∑–∞ **${seller.price}k**.`);
    //
    //         return interaction.reply({ content: "‚úÖ –ù–∞–π–¥–µ–Ω –ø—Ä–æ–¥–∞–≤–µ—Ü! –ö–æ–Ω—Ç–∞–∫—Ç—ã –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã.", flags: MessageFlags.Ephemeral });
    //     }
    //
    //     // –ï—Å–ª–∏ —Ç–æ—Ä–≥ —Ä–∞–∑—Ä–µ—à—ë–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–∫—É–ø–∞—Ç–µ–ª—é –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –≤–≤–æ–¥–∞ —Ü–µ–Ω—ã
    //     const row = new ActionRowBuilder().addComponents(
    //         new ButtonBuilder()
    //             .setCustomId(`make_offer_${seller.id}_${newLot.rows[0].id}`)
    //             .setLabel("üí∞ –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Å–≤–æ—é —Ü–µ–Ω—É")
    //             .setStyle(ButtonStyle.Primary)
    //     );
    //
    //     await buyerUser.send({
    //         content: `üì¢ **–ù–∞—à—ë–ª—Å—è –ø—Ä–æ–¥–∞–≤–µ—Ü!** <@${seller.user_id}> –ø—Ä–æ–¥–∞—ë—Ç **${item}** –∑–∞ **${seller.price}k**.\n–í—ã –º–æ–∂–µ—Ç–µ **–ø—Ä–∏–Ω—è—Ç—å —Ü–µ–Ω—É** –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å **—Å–≤–æ—é**.`,
    //         components: [row]
    //     });
    //
    //     await sellerUser.send(`üõí **–ù–∞—à—ë–ª—Å—è –ø–æ–∫—É–ø–∞—Ç–µ–ª—å!** <@${userId}> —Ö–æ—á–µ—Ç –∫—É–ø–∏—Ç—å **${item}** –∑–∞ **${price}k**.`);
    //
    //     return interaction.reply({ content: "‚úÖ –ù–∞–π–¥–µ–Ω –ø—Ä–æ–¥–∞–≤–µ—Ü! –û–∂–∏–¥–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.", flags: MessageFlags.Ephemeral });
    // }
    //
    // return interaction.reply({ content: "‚úÖ –í–∞—à –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–∫—É–ø–∫—É –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–∏—Å—Ç–µ–º—É.", flags: MessageFlags.Ephemeral });
}
