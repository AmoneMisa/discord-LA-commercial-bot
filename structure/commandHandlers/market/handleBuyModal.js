import { ActionRowBuilder, ButtonBuilder, ButtonStyle } from "discord.js";
import i18n from "../../../locales/i18n.js";
import {getUserLanguage} from "../../dbUtils.js";

export default async function(interaction, pool) {
    const [_, __, lotId] = interaction.customId.split("_");

    const goldAmount = parseInt(interaction.fields.getTextInputValue("buy_amount"));
    const comment = interaction.fields.getTextInputValue("buy_comment") || "_–Ω–µ—Ç_";

    if (isNaN(goldAmount) || goldAmount <= 0) {
        return interaction.reply({ content: "‚ùå –£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–æ–ª–æ—Ç–∞.", ephemeral: true });
    }

    const lotData = await pool.query("SELECT * FROM marketplace_lots WHERE id = $1", [lotId]);
    if (lotData.rowCount === 0) {
        return interaction.reply({ content: "‚ùå –õ–æ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ —É–¥–∞–ª—ë–Ω.", ephemeral: true });
    }

    const lot = lotData.rows[0];
    const lang = await getUserLanguage(interaction.user.id, pool);

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–¥–∞–≤—Ü—É
    const sellerUser = await interaction.client.users.fetch(lot.seller_id);
    const requestMsg = await sellerUser.send({
        content: `üí∏ –í–∞–º –ø–æ—Å—Ç—É–ø–∏–ª **–∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–∫—É–ø–∫—É** –æ—Ç <@${interaction.user.id}> –Ω–∞ **${goldAmount} –∑–æ–ª–æ—Ç–∞**\n\nüí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: ${comment}`,
        components: [
            new ActionRowBuilder().addComponents(
                new ButtonBuilder()
                    .setCustomId(`accept_order_${interaction.user.id}_${lotId}_${goldAmount}`)
                    .setLabel("‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ")
                    .setStyle(ButtonStyle.Success),
                new ButtonBuilder()
                    .setCustomId(`reject_order_${interaction.user.id}_${lotId}`)
                    .setLabel("‚ùå –û—Ç–∫–ª–æ–Ω–µ–Ω–æ")
                    .setStyle(ButtonStyle.Danger)
            )
        ]
    });

    await interaction.reply({ content: i18n.t("market.requestSent", { lng: lang }), ephemeral: true });
}
