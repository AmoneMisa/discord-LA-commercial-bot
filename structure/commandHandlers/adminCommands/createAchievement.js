import {MessageFlags} from "discord.js";
import {saveAchievementIcon} from "../achievements/saveAchievementIcon.js";

export default async function createAchievement(interaction, pool) {
    const name = interaction.options.getString('name');
    const description = interaction.options.getString('description');
    const icon = interaction.options.getAttachment('icon');

    if (!icon) {
        return interaction.reply({ content: '‚ùå –ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ PNG.', flags: MessageFlags.Ephemeral });
    }

    const savedPath = saveAchievementIcon(name, icon.url);

    if (savedPath) {
        await interaction.reply({ content: `üèÜ –î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ **${name}** —Å–æ–∑–¥–∞–Ω–æ!\nüìÅ –§–∞–π–ª —Å–æ—Ö—Ä–∞–Ω—ë–Ω: ${savedPath}`, flags: MessageFlags.Ephemeral });
    } else {
        await interaction.reply({ content: '‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∏–∫–æ–Ω–∫–∏.', flags: MessageFlags.Ephemeral });
    }

    await pool.query(
        `INSERT INTO achievements (name, description, icon) VALUES ($1, $2, $3) ON CONFLICT (name) DO NOTHING`,
        [name, description, icon.url]
    );

    await interaction.reply({ content: `‚úÖ –î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ **${name}** —Å–æ–∑–¥–∞–Ω–æ!`, flags: MessageFlags.Ephemeral });
}
