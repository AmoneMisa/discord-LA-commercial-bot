import {ActionRowBuilder, ButtonBuilder, ButtonStyle, MessageFlags} from "discord.js";
import {getRaidName} from "../../dbUtils.js";

export default async function(interaction, pool, client) {
    const raidName = interaction.options.getString('raid');
    const raidId = await pool.query(`SELECT raid_id FROM raids WHERE raid_name = $1`, [raidName]);

    if (!raidId) {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ —Ä–µ–π–¥–∞ –≤ –±–∞–∑–µ:", raidName, raidId.rows[0].id);
        return await interaction.reply('–†–µ–π–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω!');
    }

    const subscribers = await pool.query(`
                SELECT buyer_id FROM subscriptions
                WHERE seller_id = $1
                  AND raid_id = $2
            `, [interaction.user.id, raidId.rows[0].id]);

    for (const subscriber of subscribers.rows) {
        const user = await client.users.fetch(subscriber.buyer_id);
        if (user) {
            const row = new ActionRowBuilder()
                .addComponents(
                    new ButtonBuilder()
                        .setCustomId(`raid_buy_${interaction.user.id}_${raidId}`)
                        .setLabel('–•–æ—á—É –∫—É–ø–∏—Ç—å')
                        .setStyle(ButtonStyle.Primary)
                );

            const raidName = await getRaidName(pool, raidId);

            await user.send({
                content: `üîî –ò–≥—Ä–æ–∫ **<@${interaction.user.id}>** –Ω–∞–±–∏—Ä–∞–µ—Ç –≥—Ä—É–ø–ø—É –Ω–∞ **${raidName}**!)`,
                components: [row], flags: MessageFlags.Ephemeral
            }).then((message) => {
                setTimeout(() => {
                    message.edit({content: `–í—Ä–µ–º—è –¥–ª—è –æ—Ç–≤–µ—Ç–∞ –∏—Å—Ç–µ–∫–ª–æ`, components: [], flags: MessageFlags.Ephemeral});
                }, 1000 * 60 * 5);
            });
        }
    }
}