import {MessageFlags} from "discord.js";
import sendCharacterList from "../../generateCharactersListImage.js";
import {getUserAchievements} from "../../dbUtils.js";
import {getMember} from "../../utils.js";

/**
 * Handles the profile view interaction, retrieves profile details and associated characters,
 * and sends back the appropriate response with the profile and character information.
 *
 * @param {object} interaction - The interaction object containing user input and context.
 * @param {object} pool - The database connection pool used to query the database.
 * @param {boolean} [isContextMenu=false] - Indicates if the command was triggered through a context menu.
 * @param {boolean} [isMessageContentMenuCommand=false] - Indicates if the interaction was invoked through a message content menu command.
 * @return {Promise<void>} Resolves when the interaction has been successfully processed and a response is sent.
 */
export default async function handleProfileView(interaction, pool, isContextMenu = false, isMessageContentMenuCommand = false) {
    let member = getMember(interaction, isContextMenu, isMessageContentMenuCommand);

    if (member.bot) {
        return await interaction.reply({content: "–≠—Ç—É –∫–æ–º–∞–Ω–¥—É –Ω–µ–ª—å–∑—è –ø—Ä–∏–º–µ–Ω—è—Ç—å –Ω–∞ –±–æ—Ç–∞—Ö", flags: MessageFlags.Ephemeral});
    }

    const userId = member.id;
    const profile = await pool.query(`SELECT *
                                      FROM profiles
                                      WHERE user_id = $1`, [userId]);

    if (!profile.rows.length) {
        return interaction.reply({content: 'üö´ –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –∞–Ω–∫–µ—Ç—ã!', flags: MessageFlags.Ephemeral});
    }

    const characters = await pool.query(`SELECT *
                                         FROM characters
                                         WHERE profile_id = $1`, [profile.rows[0].id])

    const achievements = await getUserAchievements(pool, userId);

    if (characters.rows.length) {
        const data = profile.rows[0];
        await sendCharacterList(interaction,
            `üìú –ü—Ä–æ—Ñ–∏–ª—å ${interaction.options.getUser('user').username}\n\n :peacock: **–ò–º—è:** ${data.name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}\n**–†–æ–ª—å:** ${data.role}\n**–ü—Ä–∞–π–º:** ${data.prime_start || '–ù–µ —É–∫–∞–∑–∞–Ω'} - ${data.prime_end || '–ù–µ —É–∫–∞–∑–∞–Ω'}\n**–†–µ–π–¥–æ–≤—ã–π –æ–ø—ã—Ç:** ${data.raid_experience.join(', ') || '–ù–µ —É–∫–∞–∑–∞–Ω'}\n**–û–ø—ã—Ç –≤ –ø—Ä–æ–¥–∞–∂–∞—Ö:** ${data.sales_experience || '–ù–µ —É–∫–∞–∑–∞–Ω'}`,
            characters.rows, null, achievements);
    }
}
