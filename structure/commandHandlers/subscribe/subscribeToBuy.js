import {MessageFlags} from "discord.js";
import {getSubscriptions} from "../../dbUtils.js";

export default async function subscribeToBuy(interaction, pool) {
    const categoryResult = await pool.query('SELECT value FROM settings WHERE key = $1', ['bus_category']);

    if (categoryResult.rows.length === 0) {
        console.error("–ù–µ –≤—ã–±—Ä–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Ä–µ–π–¥–æ–≤.");
        return interaction.reply("–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –Ω–µ –≤—ã–±—Ä–∞–ª –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Ä–µ–π–¥–æ–≤. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∏–º.");
    }

    const seller = interaction.options.getUser('user');
    const buyerId = interaction.user.id;
    const raid = interaction.options.getString('raid');

    const blockedBuyer = await pool.query('SELECT * FROM blocked_reviewers WHERE user_id = $1', [buyerId]);
    if (blockedBuyer.rowCount > 0) {
        return await interaction.reply({
            content: 'üö´ –í–∞–º –∑–∞–ø—Ä–µ—â–µ–Ω–æ –ø–æ–¥–ø–∏—Å—ã–≤–∞—Ç—å—Å—è –Ω–∞ –ø—Ä–æ–¥–∞–≤—Ü–æ–≤.',
            flags: MessageFlags.Ephemeral
        });
    }

    const raidData = await pool.query('SELECT id FROM raids WHERE LOWER(raid_name) = LOWER($1)', [raid]);
    const result = await pool.query('SELECT id FROM available_raids WHERE raid_id = $1', [raidData.rows[0].id]);

    if (result.rows.length === 0) {
        console.error("–í—ã–±—Ä–∞–Ω–Ω—ã–π —Ä–µ–π–¥ –Ω–µ –∏–º–µ–µ—Ç —Å–≤—è–∑–∏ —Å —Ä–æ–ª—å—é. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Ä–æ–ª—å.", raid);

        return await interaction.reply({
            content: 'üö´ –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —ç—Ç–æ—Ç —Ä–µ–π–¥. –°–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.',
            flags: MessageFlags.Ephemeral
        });
    }

    for (const availableRaid of result.rows) {
        console.log(buyerId, seller.id, availableRaid.id);

        if (await getSubscriptions(pool, buyerId, seller.id, availableRaid.id).length > 0) {
            await interaction.reply({
                content: 'üö´ –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –æ–¥–Ω–æ–≥–æ –∏ —Ç–æ–≥–æ –∂–µ –ø—Ä–æ–¥–∞–≤—Ü–∞ –ø–æ–≤—Ç–æ—Ä–Ω–æ, –Ω–∞ –æ–¥–∏–Ω –∏ —Ç–æ—Ç –∂–µ —Ä–µ–π–¥.',
                flags: MessageFlags.Ephemeral
            });
            continue;
        }

        await pool.query(`
            INSERT INTO subscriptions (buyer_id, seller_id, raid_id)
            VALUES ($1, $2, $3)
            ON CONFLICT DO NOTHING
        `, [buyerId, seller.id, availableRaid.id]);
    }

    return interaction.reply({
        content: `‚úÖ –í—ã –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç **<@${seller.id}>** –ø–æ —Ä–µ–π–¥–∞–º: ${raid}.`,
        flags: MessageFlags.Ephemeral
    });
}
